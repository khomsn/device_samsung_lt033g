
project frameworks/base/
diff --git a/frameworks/base/packages/SystemUI/res/values/config.xml b/frameworks/base/packages/SystemUI/res/values/config.xml
index 6673a6a06de..af8e2d07fdc 100644
--- a/frameworks/base/packages/SystemUI/res/values/config.xml
+++ b/frameworks/base/packages/SystemUI/res/values/config.xml
@@ -119,7 +119,7 @@
 
     <!-- The default tiles to display in QuickSettings -->
     <string name="quick_settings_tiles_default" translatable="false">
-        wifi,bt,inversion,cell,airplane,dnd,rotation,flashlight,location,cast,hotspot,adb_network,compass,nfc,float_mode,pie,profiles,sync,volume_panel,usb_tether,screen_timeout,performance,halo,ambient_display,live_display,music,brightness,screen_off,screenshot,expanded_desktop,reboot,configurations,heads_up,lte,themes,navbar,appcirclebar,kernel_adiutor,screenrecord,gesture_anywhere,battery_saver,power_menu,app_picker,kill_app,caffeine,hw_keys,pulse,sound,visualizer,lockscreen
+        wifi,bt,inversion,cell,airplane,dnd,rotation,flashlight,location,cast,hotspot,adb_network,compass,nfc,float_mode,pie,profiles,sync,volume_panel,usb_tether,screen_timeout,performance,halo,ambient_display,live_display,music,brightness,screen_off,screenshot,expanded_desktop,reboot,configurations,heads_up,lte,themes,navbar,appcirclebar,screenrecord,gesture_anywhere,battery_saver,power_menu,app_picker,kill_app,caffeine,hw_keys,pulse,sound,visualizer,lockscreen
     </string>
 
     <!-- The default tiles to reset to in QuickSettings -->
diff --git a/frameworks/base/packages/SystemUI/src/com/android/systemui/qs/tiles/KernelAdiutorTile.java b/frameworks/base/packages/SystemUI/src/com/android/systemui/qs/tiles/KernelAdiutorTile.java
deleted file mode 100644
index 849afbce426..00000000000
--- a/frameworks/base/packages/SystemUI/src/com/android/systemui/qs/tiles/KernelAdiutorTile.java
+++ /dev/null
@@ -1,70 +0,0 @@
-/*
- * Copyright (C) 2015 CyanideL
- *
- * Licensed under the Apache License, Version 2.0 (the "License");
- * you may not use this file except in compliance with the License.
- * You may obtain a copy of the License at
- *
- *      http://www.apache.org/licenses/LICENSE-2.0
- *
- * Unless required by applicable law or agreed to in writing, software
- * distributed under the License is distributed on an "AS IS" BASIS,
- * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
- * See the License for the specific language governing permissions and
- * limitations under the License.
- */
-
-package com.android.systemui.qs.tiles;
-
-import android.content.ComponentName;
-import android.content.Context;
-import android.content.Intent;
-import android.net.Uri;
-import android.os.UserHandle;
-import android.view.View;
-
-import com.android.systemui.R;
-import com.android.systemui.qs.QSTile;
-import com.android.systemui.qs.QSTileView;
-import com.android.internal.logging.MetricsLogger;
-
-/** Quick settings tile: KernelAdiutor **/
-public class KernelAdiutorTile extends QSTile<QSTile.BooleanState> {
-	private static final Intent APP_KERNEL_TILE = new Intent().setComponent(new ComponentName(
-            "com.grarak.kerneladiutor", "com.grarak.kerneladiutor.activities.MainActivity"));
-
-    public KernelAdiutorTile(Host host) {
-        super(host);
-    }
-
-    @Override
-    protected void handleDestroy() {
-        super.handleDestroy();
-    }
-   @Override
-    public int getMetricsCategory() {
-        return MetricsLogger.DONT_TRACK_ME_BRO;
-    }
-
-
-    @Override
-    protected BooleanState newTileState() {
-        return new BooleanState();
-    }
-
-    @Override
-    public void setListening(boolean listening) {
-    }
-
-    @Override
-    protected void handleClick() {
-	mHost.startActivityDismissingKeyguard(APP_KERNEL_TILE);
-    }
-
-    @Override
-    protected void handleUpdateState(BooleanState state, Object arg) {
-        state.visible = true;
-        state.label = mContext.getString(R.string.quick_settings_kernel_adiutor);
-        state.icon = ResourceIcon.get(R.drawable.ic_qs_kernel_adiutor);
-    }
-}
diff --git a/frameworks/base/packages/SystemUI/src/com/android/systemui/statusbar/phone/QSTileHost.java b/frameworks/base/packages/SystemUI/src/com/android/systemui/statusbar/phone/QSTileHost.java
index 0a1ac4ba79a..dbe680ef9e0 100644
--- a/frameworks/base/packages/SystemUI/src/com/android/systemui/statusbar/phone/QSTileHost.java
+++ b/frameworks/base/packages/SystemUI/src/com/android/systemui/statusbar/phone/QSTileHost.java
@@ -62,7 +62,6 @@ import com.android.systemui.qs.tiles.LocationTile;
 import com.android.systemui.qs.tiles.PieTile;
 import com.android.systemui.qs.tiles.AppCircleBarTile;
 import com.android.systemui.qs.tiles.ExpandedDesktopTile;
-import com.android.systemui.qs.tiles.KernelAdiutorTile;
 import com.android.systemui.qs.tiles.HardwareKeysTile;
 import com.android.systemui.qs.tiles.PulseTile;
 import com.android.systemui.qs.tiles.GestureAnyWhereTile;
@@ -363,7 +362,6 @@ public class QSTileHost implements QSTile.Host, Tunable {
 	else if (tileSpec.equals("themes")) return new ThemesTile(this);
 	else if (tileSpec.equals("navbar")) return new NavigationBarTile(this);
 	else if (tileSpec.equals("appcirclebar")) return new AppCircleBarTile(this);
-	else if (tileSpec.equals("kernel_adiutor")) return new KernelAdiutorTile(this);
 	else if (tileSpec.equals("screenrecord")) return new ScreenrecordTile(this);
 	else if (tileSpec.equals("gesture_anywhere")) return new GestureAnyWhereTile(this);
 	else if (tileSpec.equals("battery_saver")) return new BatterySaverTile(this);
diff --git a/frameworks/base/packages/SystemUI/src/com/android/systemui/tuner/QsTuner.java b/frameworks/base/packages/SystemUI/src/com/android/systemui/tuner/QsTuner.java
index 44391b0c4c2..9fa3ad277d0 100644
--- a/frameworks/base/packages/SystemUI/src/com/android/systemui/tuner/QsTuner.java
+++ b/frameworks/base/packages/SystemUI/src/com/android/systemui/tuner/QsTuner.java
@@ -229,7 +229,6 @@ public class QsTuner extends Fragment implements Callback {
         else if (mSpec.equals("themes")) return R.string.quick_settings_themes;
         else if (mSpec.equals("navbar")) return R.string.quick_settings_navigation_bar;
         else if (mSpec.equals("appcirclebar")) return R.string.quick_settings_appcirclebar_title;
-        else if (mSpec.equals("kernel_adiutor")) return R.string.quick_settings_kernel_title;
         else if (mSpec.equals("screenrecord")) return R.string.quick_settings_screenrecord;
         else if (mSpec.equals("gesture_anywhere")) return R.string.quick_settings_gesture_anywhere_label;
         else if (mSpec.equals("battery_saver")) return R.string.quick_settings_battery_saver_label;
@@ -489,7 +488,6 @@ public class QsTuner extends Fragment implements Callback {
 	    else if (mSpec.equals("themes")) return R.drawable.ic_qs_themes;
 	    else if (mSpec.equals("navbar")) return R.drawable.ic_qs_navbar_on;
 	    else if (mSpec.equals("appcirclebar")) return R.drawable.ic_qs_appcirclebar_on;
-	    else if (mSpec.equals("kernel_adiutor")) return R.drawable.ic_qs_kernel_adiutor;	
 	    else if (mSpec.equals("screenrecord")) return R.drawable.ic_qs_screenrecord;	
 	    else if (mSpec.equals("gesture_anywhere")) return R.drawable.ic_qs_gestures_on;
 	    else if (mSpec.equals("battery_saver")) return R.drawable.ic_qs_battery_saver_on;
